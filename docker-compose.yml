#!/usr/bin/env -S docker-compose -p picapi -f

version: "3.7"

networks:
  internal:
    driver: bridge
    internal: true
    external: false
  external:
    driver: bridge
    internal: false
    external: false

volumes:
  data_files:
    driver: local
  nfs:
    driver: local
    driver_opts:
      type: nfs
      o: addr=storage,rw
      device: ":/mnt"

services:

  application:
    privileged: false
    restart: on-failure
    command: python3 api ${PORT:-8000}
    image: pvtmert/picapi:full
    build:
      context: ./
      dockerfile: dockerfile
    networks:
      - internal
    expose:
      - ${PORT:-8000}
    volumes:
      - ./:/data:ro
    healthcheck:
      test: curl -vskLfm5 http://localhost:${PORT:-8000}
      interval: 1m
      timeout: 10s
      retries: 3

  cache:
    privileged: false
    restart: on-failure
    command: redis-server
    image: pvtmert/picapi:full
    build:
      context: ./
      dockerfile: dockerfile
    networks:
      - internal
    expose:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1m
      timeout: 10s
      retries: 3

  gateway:
    privileged: false
    restart: on-failure
    command: |
      bash -c "
      rm -rf /etc/nginx/sites-enabled/default;
      echo '
        resolver_timeout 30s;
        resolver 127.0.0.11 valid=1m ipv6=off;
        server {
          listen 80 default_server;
          location /api/ {
            set $$upstream http://application:${PORT:-8000}/;
            proxy_read_timeout 1m;
            proxy_pass $$upstream;
          }
        }
      ' | tee /etc/nginx/sites-enabled/application.conf;
      ln -sf /dev/stdout /var/log/nginx/access.log;
      ln -sf /dev/stderr /var/log/nginx/error.log;
      nginx -g 'daemon off;';
      "
    image: pvtmert/picapi:full
    build:
      context: ./
      dockerfile: dockerfile
    networks:
      - internal
      - external
    expose:
      - 80
    ports:
      - 80:80
    healthcheck:
      test: curl -vskLfm5 http://localhost
      interval: 1m
      timeout: 10s
      retries: 3

  storage:
    privileged: true
    restart: on-failure
    command: |
      bash -c '
        echo "/data *(rw,sync,insecure,no_subtree_check,no_root_squash,fsid=0)" \
        | tee -a /etc/exports;
        service rpcbind           start;
        service nfs-common        start;
        service nfs-kernel-server start;
        exportfs -ra; true netstat -tpnc;
        rpc.nfsd -d -U -N 3 -V 4 $$(nproc);
      '
    image: pvtmert/picapi:full
    build:
      context: ./
      dockerfile: dockerfile
    networks:
      - internal
    expose:
      - 2049
    ports:
      - 2049:2049
    volumes:
      - data_files:/data
    cap_add:
      - SYS_ADMIN
      - SYS_MODULE
